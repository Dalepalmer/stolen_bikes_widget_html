// Generated by CoffeeScript 1.7.1
var appendBikes, binx_list_item, binx_widget_template, formatDates, getNearbyStolen, getSerialResponse, initializeBinxWidget, root_url, trim;

root_url = "http://recoveries.bikeindex.org";

Array.prototype.uniq = function() {
  var key, output, value, _i, _ref, _results;
  output = {};
  for (key = _i = 0, _ref = this.length; 0 <= _ref ? _i < _ref : _i > _ref; key = 0 <= _ref ? ++_i : --_i) {
    output[this[key]] = this[key];
  }
  _results = [];
  for (key in output) {
    value = output[key];
    _results.push(value);
  }
  return _results;
};

trim = function(str) {
  return str.replace(/^\s\s*/, "").replace(/\s\s*$/, "");
};

getSerialResponse = function(serial) {
  var base_url, that;
  base_url = $('#search_serials').attr('data-target');
  that = this;
  return $.ajax({
    type: "GET",
    url: "https://bikeindex.org/api/v1/bikes?serial=" + serial,
    success: function(data, textStatus, jqXHR) {
      data.serial_searched = serial;
      return that.appendBikes(data);
    }
  });
};

appendBikes = function(data, setTime) {
  var cache, i;
  if (setTime == null) {
    setTime = null;
  }
  if (setTime != null) {
    cache = {
      data: data,
      time: setTime
    };
    localStorage.setItem('binx_rstolen', JSON.stringify(cache));
  }
  $("#binx_list_container").html(Mustache.render(binx_list_item, data));
  $('#binx_stolen_widget ul').css('max-height', $('#binx_stolen_widget').attr('data-height'));
  formatDates();
  if (data.recent_results == null) {
    if (data.bikes.length > 0) {
      if (data.bikes.length > 19) {
        i = " <span>(many found, showing first 20)</span>";
      } else {
        i = " <span>(" + data.bikes.length + " found)</span>";
      }
      return $('#binx_list_container .search-response-info').append(i);
    }
  }
};

formatDates = function() {
  var date, ds, sdate, today, yesterday, _i, _len, _ref, _results;
  today = new Date();
  yesterday = new Date();
  yesterday.setDate(today.getDate() - 1);
  yesterday = yesterday.toString().split(/\d{2}:/)[0];
  today = today.toString().split(/\d{2}:/)[0];
  _ref = $("#binx_list_container .date-stolen");
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    ds = _ref[_i];
    ds = $(ds);
    sdate = new Date(Date.parse(ds.text().trim()));
    date = sdate.toString().split(/\d{2}:/)[0];
    if (date === today) {
      date = 'Today';
    }
    if (date === yesterday) {
      date = 'Yesterday';
    }
    _results.push(ds.text(date));
  }
  return _results;
};

getNearbyStolen = function(location, existing_bikes) {
  var url;
  if (existing_bikes == null) {
    existing_bikes = [];
  }
  url = "https://bikeindex.org/api/v1/bikes?stolen=true&proximity=" + location + "&proximity_radius=100";
  return $.ajax({
    type: "GET",
    url: url,
    success: function(data, textStatus, jqXHR) {
      var time;
      time = new Date().getTime();
      data.recent_results = true;
      data.bikes = existing_bikes.concat(data.bikes);
      if (location.length > 0) {
        data.location = location;
      }
      if (data.bikes.length < 6 && location.length > 0) {
        return getNearbyStolen('', data.bikes);
      } else {
        return appendBikes(data, time);
      }
    }
  });
};

initializeBinxWidget = function(options) {
  var cache, is_cached, time;
  Mustache.parse(binx_list_item);
  $('#binx_stolen_widget').html(Mustache.render(binx_widget_template, options.height));
  $('#binx_search_form').submit(function(event) {
    getSerialResponse($('#binx_search').val());
    return false;
  });
  $('#binxformsubm_a').click(function(event) {
    return getSerialResponse($('#binx_search').val());
  });
  if (options.norecent) {
    return true;
  }
  is_cached = false;
  if (!options.nocache) {
    cache = localStorage.getItem('binx_rstolen');
    time = new Date().getTime();
    if ((cache != null) && cache.length > 0) {
      cache = JSON.parse(cache);
      if ((cache.time != null) && time - cache.time < 10800000) {
        is_cached = true;
        appendBikes(cache.data);
      }
    }
  }
  if (!is_cached) {
    return getNearbyStolen(options.location);
  }
};

$(document).ready(function() {
  var container, options, _ref, _ref1, _ref2, _ref3;
  container = $('#binx_stolen_widget');
  options = {
    location: (_ref = container.attr('data-location')) != null ? _ref : '',
    height: "" + ((_ref1 = container.attr('data-height')) != null ? _ref1 : 450) + "px",
    nocache: (_ref2 = container.attr('data-nocache')) != null ? _ref2 : false,
    norecent: (_ref3 = container.attr('data-norecent')) != null ? _ref3 : false
  };
  container.attr('data-height', options.height);
  return initializeBinxWidget(options);
});

binx_widget_template = "<link href=\"" + root_url + "styles.css\" rel=\"stylesheet\" type=\"text/css\">\n<form class=\"topsearcher\" id=\"binx_search_form\">\n  <span class=\"spacing-span\"></span>\n  <span class=\"top-stripe skinny-stripe\"></span>\n  <span class=\"spacing-span\"></span>\n  <span class=\"top-stripe fat-stripe\"></span>\n  <span class=\"spacing-span\"></span>\n  <span class=\"bottom-stripe fat-stripe\"></span>\n  <span class=\"spacing-span\"></span>\n  <span class=\"bottom-stripe skinny-stripe\"></span>\n  <input id=\"binx_search\" type=\"text\" placeholder=\"Search for a serial number\">\n  <input type=\"submit\" id=\"binxformsubm\">\n  <a href=\"#\" class=\"subm\" id=\"binxformsubm_a\"><img src=\"" + root_url + "search.svg\"></a>\n</form>\n<div class='binxcontainer' id='binx_list_container'></div>";

binx_list_item = "{{#serial_searched}}\n  <h2 class=\"search-response-info\">Bikes with serial numbers matching <em>{{serial_searched}}</em></h2>\n{{/serial_searched}}\n<ul>\n  {{#bikes}}\n    <li class='{{#stolen}}stolen{{/stolen}}'>\n      {{#thumb}}\n         <a class='stolen-thumb' href='{{url}}' target=\"_blank\">\n          <img src='{{thumb}}'>\n        </a>\n      {{/thumb}}\n      <h4>\n        <a href='{{url}}' target=\"_blank\">{{title}}</a>\n      </h4>\n      {{#stolen}}\n        <p>\n          <span class='stolen-color'>Stolen</span> {{#stolen_record.location}}from {{stolen_record.location}} &mdash; {{/stolen_record.location}} <span class='date-stolen'>{{stolen_record.date_stolen}}\n        </p>\n      {{/stolen}}\n      <p>\n        Serial: <span class='serial-text'>{{serial}}</span>\n      </p>\n      {{^stolen}}\n        <p class=\"not-stolen\">Bike is not marked stolen</p>\n      {{/stolen}}\n    </li>\n  {{/bikes}}\n</ul>\n{{^bikes}}\n  <div class=\"binx-stolen-widget-list\">\n    {{#recent_results}}\n      <h2 class='search-fail'>\n        We're sorry! Something went wrong and we couldn't retrieve recent results!\n        <span>We're probably working on fixing this right now, send us an email at <a href=\"mailto:contact@bikeindex.org\">contact@bikeindex.org</a> if the problem persists</span>\n      </h2>\n    {{/recent_results}}\n    {{#serial_searched}}\n      <h2 class='search-fail'>\n        No bikes found on the Bike Index with a serial of <span class=\"search-query\">{{serial_searched}}</span>\n      </h2>\n    {{/serial_searched}}\n  </div>\n{{/bikes}}\n{{#recent_results}}\n  <div class=\"widget-info\">\n    Recent reported stolen bikes \n    {{#location}}\n      near <em>{{location}}</em>\n    {{/location}}\n  </div>\n{{/recent_results}}";
